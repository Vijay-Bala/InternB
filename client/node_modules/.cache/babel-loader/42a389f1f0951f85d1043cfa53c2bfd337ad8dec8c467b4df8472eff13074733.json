{"ast":null,"code":"var _jsxFileName = \"C:\\\\Others\\\\Projects\\\\2\\\\client\\\\src\\\\ConnectionCount.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// function ConnectionCount() {\n//   const [connectionCount, setConnectionCount] = useState(0);\n\n//   useEffect(() => {\n//     // Fetch the connection count from the server\n//     fetch('http://localhost:3001/connection-count')\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setConnectionCount(data.connectionCount);\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching connection count: ', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div className=\"connection-count\">\n//       <p>Connection Count: {connectionCount}</p>\n//     </div>\n//   );\n// }\n\n// export default ConnectionCount;\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectionCount() {\n  _s();\n  const [connectionCount, setConnectionCount] = useState(0);\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.on('connectionCount', count => {\n      setConnectionCount(count);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-count\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connection Count: \", connectionCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectionCount, \"3dllnvjQHx+pDVPLt/3c4PUhKpw=\");\n_c = ConnectionCount;\nexport default ConnectionCount;\nvar _c;\n$RefreshReg$(_c, \"ConnectionCount\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","ConnectionCount","_s","connectionCount","setConnectionCount","socket","on","count","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Others/Projects/2/client/src/ConnectionCount.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// function ConnectionCount() {\r\n//   const [connectionCount, setConnectionCount] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the connection count from the server\r\n//     fetch('http://localhost:3001/connection-count')\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setConnectionCount(data.connectionCount);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching connection count: ', error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"connection-count\">\r\n//       <p>Connection Count: {connectionCount}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ConnectionCount;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nfunction ConnectionCount() {\r\n  const [connectionCount, setConnectionCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3001');\r\n\r\n    socket.on('connectionCount', (count) => {\r\n      setConnectionCount(count);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"connection-count\">\r\n      <p>Connection Count: {connectionCount}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionCount;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGP,EAAE,CAAC,uBAAuB,CAAC;IAE1CO,MAAM,CAACC,EAAE,CAAC,iBAAiB,EAAGC,KAAK,IAAK;MACtCH,kBAAkB,CAACG,KAAK,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXF,MAAM,CAACG,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BV,OAAA;MAAAU,QAAA,GAAG,oBAAkB,EAACP,eAAe;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACZ,EAAA,CApBQD,eAAe;AAAAc,EAAA,GAAfd,eAAe;AAsBxB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}