{"ast":null,"code":"var _jsxFileName = \"C:\\\\Others\\\\Projects\\\\2\\\\client\\\\src\\\\Connectioncount.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// function ConnectionCount() {\n//   const [connectionCount, setConnectionCount] = useState(0);\n\n//   useEffect(() => {\n//     // Fetch the connection count from the server\n//     fetch('http://localhost:3001/connection-count')\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setConnectionCount(data.connectionCount);\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching connection count: ', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div className=\"connection-count\">\n//       <p>Connection Count: {connectionCount}</p>\n//     </div>\n//   );\n// }\n\n// export default ConnectionCount;\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_base = 'http://localhost:3001';\nfunction ConnectionCount() {\n  _s();\n  const [connectionCount, setConnectionCount] = useState(0);\n\n  // Function to fetch the connection count from the server\n  const fetchConnectionCount = async () => {\n    try {\n      const response = await fetch(api_base + '/connection-count');\n      const data = await response.json();\n      setConnectionCount(data.connectionCount);\n    } catch (error) {\n      console.error('Error fetching connection count: ', error);\n    }\n  };\n  useEffect(() => {\n    // Initially fetch the connection count\n    fetchConnectionCount();\n\n    // Set up an interval to fetch the connection count every millisecond\n    const interval = setInterval(fetchConnectionCount, 1000);\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-count\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connection Count: \", connectionCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectionCount, \"3dllnvjQHx+pDVPLt/3c4PUhKpw=\");\n_c = ConnectionCount;\nexport default ConnectionCount;\nvar _c;\n$RefreshReg$(_c, \"ConnectionCount\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","api_base","ConnectionCount","_s","connectionCount","setConnectionCount","fetchConnectionCount","response","fetch","data","json","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Others/Projects/2/client/src/Connectioncount.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// function ConnectionCount() {\r\n//   const [connectionCount, setConnectionCount] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the connection count from the server\r\n//     fetch('http://localhost:3001/connection-count')\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setConnectionCount(data.connectionCount);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching connection count: ', error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"connection-count\">\r\n//       <p>Connection Count: {connectionCount}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ConnectionCount;\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst api_base = 'http://localhost:3001';\r\n\r\nfunction ConnectionCount() {\r\n  const [connectionCount, setConnectionCount] = useState(0);\r\n\r\n  // Function to fetch the connection count from the server\r\n  const fetchConnectionCount = async () => {\r\n    try {\r\n      const response = await fetch(api_base + '/connection-count');\r\n      const data = await response.json();\r\n      setConnectionCount(data.connectionCount);\r\n    } catch (error) {\r\n      console.error('Error fetching connection count: ', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initially fetch the connection count\r\n    fetchConnectionCount();\r\n\r\n    // Set up an interval to fetch the connection count every millisecond\r\n    const interval = setInterval(fetchConnectionCount, 1000);\r\n\r\n    // Cleanup the interval when the component unmounts\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"connection-count\">\r\n      <p>Connection Count: {connectionCount}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionCount;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAMQ,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,GAAG,mBAAmB,CAAC;MAC5D,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,kBAAkB,CAACI,IAAI,CAACL,eAAe,CAAC;IAC1C,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACAS,oBAAoB,CAAC,CAAC;;IAEtB;IACA,MAAMO,QAAQ,GAAGC,WAAW,CAACR,oBAAoB,EAAE,IAAI,CAAC;;IAExD;IACA,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BjB,OAAA;MAAAiB,QAAA,GAAG,oBAAkB,EAACb,eAAe;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAClB,EAAA,CA9BQD,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAgCxB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}