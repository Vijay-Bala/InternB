{"ast":null,"code":"// // import React, { useEffect, useState } from 'react';\n// // import { CSSTransition, TransitionGroup } from 'react-transition-group';\n// // import ConnectionCount from './Connectioncount';\n// // const api_base = 'http://localhost:3001';\n\n// // function App() {\n// //   const [todos, setTodos] = useState([]);\n// //   const [popupActive, setPopupActive] = useState(false);\n// //   const [newTodo, setNewTodo] = useState(\"\");\n\n// //   useEffect(() => {\n// //     GetTodos();\n// //   }, []);\n\n// //   const GetTodos = () => {\n// //     fetch(api_base + '/todos')\n// //       .then((res) => res.json())\n// //       .then((data) => setTodos(data))\n// //       .catch((err) => console.error(\"Error: \", err));\n// //   };\n\n// //   const completeTodo = async (id) => {\n// //     try {\n// //       const response = await fetch(api_base + '/todo/complete/' + id);\n// //       const data = await response.json();\n\n// //       setTodos((todos) =>\n// //         todos.map((todo) => {\n// //           if (todo._id === data._id) {\n// //             todo.complete = data.complete;\n// //           }\n// //           return todo;\n// //         })\n// //       );\n// //     } catch (err) {\n// //       console.error(\"Error completing todo: \", err);\n// //     }\n// //   };\n\n// //   const addTodo = async () => {\n// //     try {\n// //       const response = await fetch(api_base + \"/todo/new\", {\n// //         method: \"POST\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify({\n// //           text: newTodo,\n// //         }),\n// //       });\n\n// //       const data = await response.json();\n\n// //       setTodos([...todos, data]);\n\n// //       setPopupActive(false);\n// //       setNewTodo(\"\");\n// //     } catch (err) {\n// //       console.error(\"Error adding todo: \", err);\n// //     }\n// //   };\n\n// //   const deleteTodo = async (id) => {\n// //     try {\n// //       const response = await fetch(api_base + '/todo/delete/' + id, {\n// //         method: \"DELETE\",\n// //       });\n\n// //       const data = await response.json();\n\n// //       setTodos((todos) =>\n// //         todos.filter((todo) => todo._id !== data.result._id)\n// //       );\n// //     } catch (err) {\n// //       console.error(\"Error deleting todo: \", err);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <ConnectionCount />\n// //       <h1>Welcome, My Friend</h1>\n// //       <h4>Your tasks</h4>\n\n// //       <TransitionGroup className=\"todos\">\n// //         {todos.length > 0 ? (\n// //           todos.map((todo) => (\n// //             <CSSTransition key={todo._id} timeout={500} classNames=\"todo\">\n// //               <div\n// //                 className={\"todo\" + (todo.complete ? \" is-complete\" : \"\")}\n// //                 onClick={() => completeTodo(todo._id)}\n// //               >\n// //                 <div className=\"checkbox\"></div>\n// //                 <div className=\"text\">{todo.text}</div>\n// //                 <div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>\n// //                   x\n// //                 </div>\n// //               </div>\n// //             </CSSTransition>\n// //           ))\n// //         ) : null}\n// //       </TransitionGroup>\n\n// //       <div className=\"addPopup\" onClick={() => setPopupActive(true)}>\n// //         +\n// //       </div>\n\n// //       {popupActive ? (\n// //         <CSSTransition in={true} timeout={300} classNames=\"popup\" unmountOnExit>\n// //           <div className=\"popup\">\n// //             <div className=\"closePopup\" onClick={() => setPopupActive(false)}>\n// //               X\n// //             </div>\n// //             <div className=\"content\">\n// //               <h3>Add Task</h3>\n// //               <input\n// //                 type=\"text\"\n// //                 className=\"add-todo-input\"\n// //                 onChange={(e) => setNewTodo(e.target.value)}\n// //                 value={newTodo}\n// //               />\n// //               <div className=\"button\" onClick={addTodo}>\n// //                 Create Task\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </CSSTransition>\n// //       ) : (\n// //         ''\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// // // Add the CSS styles you previously mentioned for the animations\n// import React, { useEffect, useState } from 'react';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\n// import ConnectionCount from './Connectioncount';\n// const api_base = 'http://localhost:3001';\n\n// function App() {\n//   const [todos, setTodos] = useState([]);\n//   const [popupActive, setPopupActive] = useState(false);\n//   const [newTodo, setNewTodo] = useState(\"\");\n\n//   useEffect(() => {\n//     GetTodos();\n//   }, []);\n\n//   const GetTodos = () => {\n//     fetch(api_base + '/todos')\n//       .then((res) => res.json())\n//       .then((data) => setTodos(data))\n//       .catch((err) => console.error(\"Error: \", err));\n//   };\n\n//   const completeTodo = async (id) => {\n//     try {\n//       const response = await fetch(api_base + '/todo/complete/' + id);\n//       const data = await response.json();\n\n//       setTodos((todos) =>\n//         todos.map((todo) => {\n//           if (todo._id === data._id) {\n//             todo.complete = data.complete;\n//           }\n//           return todo;\n//         })\n//       );\n//     } catch (err) {\n//       console.error(\"Error completing todo: \", err);\n//     }\n//   };\n\n//   const addTodo = async () => {\n//     try {\n//       const response = await fetch(api_base + \"/todo/new\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           text: newTodo,\n//         }),\n//       });\n\n//       const data = await response.json();\n\n//       setTodos([...todos, data]);\n\n//       setPopupActive(false);\n//       setNewTodo(\"\");\n//     } catch (err) {\n//       console.error(\"Error adding todo: \", err);\n//     }\n//   };\n\n//   const deleteTodo = async (id) => {\n//     try {\n//       const response = await fetch(api_base + '/todo/delete/' + id, {\n//         method: \"DELETE\",\n//       });\n\n//       if (response.ok) {\n//         // Delete was successful, update the state\n//         setTodos((todos) =>\n//           todos.filter((todo) => todo._id !== id)\n//         );\n//       } else {\n//         console.error(\"Error deleting todo: \", response.statusText);\n//       }\n//     } catch (err) {\n//       console.error(\"Error deleting todo: \", err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <ConnectionCount />\n//       <h1>Welcome, My Friend</h1>\n//       <h4>Your tasks</h4>\n\n//       <TransitionGroup className=\"todos\">\n//         {todos.length > 0 ? (\n//           todos.map((todo) => (\n//             <CSSTransition key={todo._id} timeout={500} classNames=\"todo\">\n//               <div\n//                 className={\"todo\" + (todo.complete ? \" is-complete\" : \"\")}\n//                 onClick={() => completeTodo(todo._id)}\n//               >\n//                 <div className=\"checkbox\"></div>\n//                 <div className=\"text\">{todo.text}</div>\n//                 <div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>\n//                   x\n//                 </div>\n//               </div>\n//             </CSSTransition>\n//           ))\n//         ) : null}\n//       </TransitionGroup>\n\n//       <div className=\"addPopup\" onClick={() => setPopupActive(true)}>\n//         +\n//       </div>\n\n//       {popupActive ? (\n//         <CSSTransition in={true} timeout={300} classNames=\"popup\" unmountOnExit>\n//           <div className=\"popup\">\n//             <div className=\"closePopup\" onClick={() => setPopupActive(false)}>\n//               X\n//             </div>\n//             <div className=\"content\">\n//               <h3>Add Task</h3>\n//               <input\n//                 type=\"text\"\n//                 className=\"add-todo-input\"\n//                 onChange={(e) => setNewTodo(e.target.value)}\n//                 value={newTodo}\n//               />\n//               <div className=\"button\" onClick={addTodo}>\n//                 Create Task\n//               </div>\n//             </div>\n//           </div>\n//         </CSSTransition>\n//       ) : (\n//         ''\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Others/Projects/2/client/src/App.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\n// // import { CSSTransition, TransitionGroup } from 'react-transition-group';\n// // import ConnectionCount from './Connectioncount';\n// // const api_base = 'http://localhost:3001';\n\n// // function App() {\n// //   const [todos, setTodos] = useState([]);\n// //   const [popupActive, setPopupActive] = useState(false);\n// //   const [newTodo, setNewTodo] = useState(\"\");\n\n// //   useEffect(() => {\n// //     GetTodos();\n// //   }, []);\n\n// //   const GetTodos = () => {\n// //     fetch(api_base + '/todos')\n// //       .then((res) => res.json())\n// //       .then((data) => setTodos(data))\n// //       .catch((err) => console.error(\"Error: \", err));\n// //   };\n\n// //   const completeTodo = async (id) => {\n// //     try {\n// //       const response = await fetch(api_base + '/todo/complete/' + id);\n// //       const data = await response.json();\n\n// //       setTodos((todos) =>\n// //         todos.map((todo) => {\n// //           if (todo._id === data._id) {\n// //             todo.complete = data.complete;\n// //           }\n// //           return todo;\n// //         })\n// //       );\n// //     } catch (err) {\n// //       console.error(\"Error completing todo: \", err);\n// //     }\n// //   };\n\n// //   const addTodo = async () => {\n// //     try {\n// //       const response = await fetch(api_base + \"/todo/new\", {\n// //         method: \"POST\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify({\n// //           text: newTodo,\n// //         }),\n// //       });\n\n// //       const data = await response.json();\n\n// //       setTodos([...todos, data]);\n\n// //       setPopupActive(false);\n// //       setNewTodo(\"\");\n// //     } catch (err) {\n// //       console.error(\"Error adding todo: \", err);\n// //     }\n// //   };\n\n// //   const deleteTodo = async (id) => {\n// //     try {\n// //       const response = await fetch(api_base + '/todo/delete/' + id, {\n// //         method: \"DELETE\",\n// //       });\n\n// //       const data = await response.json();\n\n// //       setTodos((todos) =>\n// //         todos.filter((todo) => todo._id !== data.result._id)\n// //       );\n// //     } catch (err) {\n// //       console.error(\"Error deleting todo: \", err);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <ConnectionCount />\n// //       <h1>Welcome, My Friend</h1>\n// //       <h4>Your tasks</h4>\n\n// //       <TransitionGroup className=\"todos\">\n// //         {todos.length > 0 ? (\n// //           todos.map((todo) => (\n// //             <CSSTransition key={todo._id} timeout={500} classNames=\"todo\">\n// //               <div\n// //                 className={\"todo\" + (todo.complete ? \" is-complete\" : \"\")}\n// //                 onClick={() => completeTodo(todo._id)}\n// //               >\n// //                 <div className=\"checkbox\"></div>\n// //                 <div className=\"text\">{todo.text}</div>\n// //                 <div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>\n// //                   x\n// //                 </div>\n// //               </div>\n// //             </CSSTransition>\n// //           ))\n// //         ) : null}\n// //       </TransitionGroup>\n\n// //       <div className=\"addPopup\" onClick={() => setPopupActive(true)}>\n// //         +\n// //       </div>\n\n// //       {popupActive ? (\n// //         <CSSTransition in={true} timeout={300} classNames=\"popup\" unmountOnExit>\n// //           <div className=\"popup\">\n// //             <div className=\"closePopup\" onClick={() => setPopupActive(false)}>\n// //               X\n// //             </div>\n// //             <div className=\"content\">\n// //               <h3>Add Task</h3>\n// //               <input\n// //                 type=\"text\"\n// //                 className=\"add-todo-input\"\n// //                 onChange={(e) => setNewTodo(e.target.value)}\n// //                 value={newTodo}\n// //               />\n// //               <div className=\"button\" onClick={addTodo}>\n// //                 Create Task\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </CSSTransition>\n// //       ) : (\n// //         ''\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// // // Add the CSS styles you previously mentioned for the animations\n// import React, { useEffect, useState } from 'react';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\n// import ConnectionCount from './Connectioncount';\n// const api_base = 'http://localhost:3001';\n\n// function App() {\n//   const [todos, setTodos] = useState([]);\n//   const [popupActive, setPopupActive] = useState(false);\n//   const [newTodo, setNewTodo] = useState(\"\");\n\n//   useEffect(() => {\n//     GetTodos();\n//   }, []);\n\n//   const GetTodos = () => {\n//     fetch(api_base + '/todos')\n//       .then((res) => res.json())\n//       .then((data) => setTodos(data))\n//       .catch((err) => console.error(\"Error: \", err));\n//   };\n\n//   const completeTodo = async (id) => {\n//     try {\n//       const response = await fetch(api_base + '/todo/complete/' + id);\n//       const data = await response.json();\n\n//       setTodos((todos) =>\n//         todos.map((todo) => {\n//           if (todo._id === data._id) {\n//             todo.complete = data.complete;\n//           }\n//           return todo;\n//         })\n//       );\n//     } catch (err) {\n//       console.error(\"Error completing todo: \", err);\n//     }\n//   };\n\n//   const addTodo = async () => {\n//     try {\n//       const response = await fetch(api_base + \"/todo/new\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           text: newTodo,\n//         }),\n//       });\n\n//       const data = await response.json();\n\n//       setTodos([...todos, data]);\n\n//       setPopupActive(false);\n//       setNewTodo(\"\");\n//     } catch (err) {\n//       console.error(\"Error adding todo: \", err);\n//     }\n//   };\n\n//   const deleteTodo = async (id) => {\n//     try {\n//       const response = await fetch(api_base + '/todo/delete/' + id, {\n//         method: \"DELETE\",\n//       });\n\n//       if (response.ok) {\n//         // Delete was successful, update the state\n//         setTodos((todos) =>\n//           todos.filter((todo) => todo._id !== id)\n//         );\n//       } else {\n//         console.error(\"Error deleting todo: \", response.statusText);\n//       }\n//     } catch (err) {\n//       console.error(\"Error deleting todo: \", err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <ConnectionCount />\n//       <h1>Welcome, My Friend</h1>\n//       <h4>Your tasks</h4>\n\n//       <TransitionGroup className=\"todos\">\n//         {todos.length > 0 ? (\n//           todos.map((todo) => (\n//             <CSSTransition key={todo._id} timeout={500} classNames=\"todo\">\n//               <div\n//                 className={\"todo\" + (todo.complete ? \" is-complete\" : \"\")}\n//                 onClick={() => completeTodo(todo._id)}\n//               >\n//                 <div className=\"checkbox\"></div>\n//                 <div className=\"text\">{todo.text}</div>\n//                 <div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>\n//                   x\n//                 </div>\n//               </div>\n//             </CSSTransition>\n//           ))\n//         ) : null}\n//       </TransitionGroup>\n\n//       <div className=\"addPopup\" onClick={() => setPopupActive(true)}>\n//         +\n//       </div>\n\n//       {popupActive ? (\n//         <CSSTransition in={true} timeout={300} classNames=\"popup\" unmountOnExit>\n//           <div className=\"popup\">\n//             <div className=\"closePopup\" onClick={() => setPopupActive(false)}>\n//               X\n//             </div>\n//             <div className=\"content\">\n//               <h3>Add Task</h3>\n//               <input\n//                 type=\"text\"\n//                 className=\"add-todo-input\"\n//                 onChange={(e) => setNewTodo(e.target.value)}\n//                 value={newTodo}\n//               />\n//               <div className=\"button\" onClick={addTodo}>\n//                 Create Task\n//               </div>\n//             </div>\n//           </div>\n//         </CSSTransition>\n//       ) : (\n//         ''\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}