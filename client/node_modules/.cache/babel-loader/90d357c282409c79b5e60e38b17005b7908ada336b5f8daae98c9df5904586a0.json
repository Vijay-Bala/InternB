{"ast":null,"code":"// src/services/api.js\n\nimport axios from 'axios';\n\n// src/services/api.js\n\nconst API_URL = 'http://localhost:5000/api/text'; // Update with your backend API URL\n// Update with your backend API URL\n\nexport const sendTextToBackend = async text => {\n  try {\n    console.log('Sending text to backend:', text); // Add this line\n    const response = await axios.post(API_URL, {\n      text\n    });\n    console.log('Response from backend:', response.data); // Add this line\n    return response.data;\n  } catch (error) {\n    console.error('Error sending text to backend:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","sendTextToBackend","text","console","log","response","post","data","error"],"sources":["C:/Others/Projects/intern/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n// src/services/api.js\r\n\r\nconst API_URL = 'http://localhost:5000/api/text'; // Update with your backend API URL\r\n // Update with your backend API URL\r\n\r\nexport const sendTextToBackend = async (text) => {\r\n    try {\r\n      console.log('Sending text to backend:', text); // Add this line\r\n      const response = await axios.post(API_URL, { text });\r\n      console.log('Response from backend:', response.data); // Add this line\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error sending text to backend:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;AACjD;;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAAC,CAAC,CAAC;IAC/C,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,OAAO,EAAE;MAAEE;IAAK,CAAC,CAAC;IACpDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACtD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}